package minheap1;
import java.util.*;

public class MinHeap1 {
	
		static Scanner in = new Scanner(System.in);
    	public static void main(String[] args) {
    		
    		long startTime = System.nanoTime();
        	System.out.println("Enter the number of random numbers to be generated");  	
			int n = in.nextInt();
    		System.out.println("Enter the maximum value for the random number");  	
    		int max = in.nextInt();
    		int[]Arr = new int[n]; 
    	    Random randomGenerator = new Random();
    	    for (int idx = 0; idx < n; ++idx)
    	    {
    	    	Arr[idx]  = randomGenerator.nextInt(max);
    	    	System.out.println("Random generated number at index " + idx + " is: "
                        + Arr[idx]);
    	    }
    	    	int kk;
    	    	for (kk = Arr.length -1; kk >= 0; kk--) {
    	    	heapM(Arr, kk);
    	    	}

    	    	for (int i = 0;i<Arr.length;i++){
    	    		System.out.println(Arr[i]);
    	    	}
    	    	
    	    	long endTime = System.nanoTime();
    	    	System.out.println("Took "+(endTime - startTime) + " ns");

            }

    public static void heapM(int[] Arr, int i) {

        int smallest;
        int left = i * 2;
        int right = i * 2 + 1;
        if (((left < Arr.length) && (Arr[left] < Arr[i]))) {
            smallest = left;
        } else {
            smallest = i;
        }

        if (((right < Arr.length) && (Arr[right] < Arr[smallest]))) {
            smallest = right;
        }
        if (smallest != i) {
        	int temp = Arr[i];
			Arr[i] = Arr[smallest];
			Arr[smallest] = temp;


            heapM(Arr, smallest);
        }
    }

   
}